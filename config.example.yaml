# SigNoz 테이블 스키마 탐색용 설정
clickhouse:
  connection_type: 'kubectl'
  username: "your_username"
  password: "your_password"
  database: 'default'
  
  kubectl:
    enabled: true
    pod_name: 'chi-signoz-clickhouse-cluster-0-0-0'
    namespace: 'clickhouse'
    internal_port: 8123
    port_forward_local_port: 8123
    context: 'niffler2-prod-apse1-db-cluster'

output:
  directory: './output'
  filename_prefix: 'daily_report'

queries:
  # 10일간 일별 파티션 용량
  all_parts_10days:
    name: '10일간 일별 파티션 용량'
    query: |
      SELECT toDate(now()),
            replace(replace(replace(t.database, '_logs', ''), '_metrics', ''), '_traces', '')    as service,
            if(database like '%logs', 'logs', if(database like '%metrics', 'metrics', 'traces')) as database,
            t.table,
            p.partition,
            disk_name,
            ceil(sum(p.size) / 1024 / 1024, 0)                                                   as MB,
            sum(rows)                                                                            as rows
      from (select distinct database, table
            from cluster('all-sharded', system.tables)
            where 1 = 1
              and engine like '%MergeTree'
              and database not in ('information_schema', 'INFORMATION_SCHEMA', 'system', 'default')) t
              left join (select database,
                                table,
                                partition,
                                disk_name,
      --                if(disk_name = 'default', bytes_on_disk, 0) as default,
      --                if(disk_name = 's3_disk', bytes_on_disk, 0) as s3,
                                bytes_on_disk as size,
                                rows
                          from
                              cluster('all-sharded', system.parts)
                          where database not in ('information_schema', 'INFORMATION_SCHEMA', 'system', 'default')) p
                        on t.database = p.database and t.table = p.table
      where 1 = 1
        and (partition > cast(toDate(now() - interval 10 day) as text) or partition in ('', 'tuple()'))
      --and partition = '2025-04-21'
        and disk_name <> 's3_disk'
      --and service = 'knox_matrix_prod'
      --    and database = 'cmc_prod_logs'
      --    and table = 'logs'
      group by 1, 2, 3, 4, 5, 6
      order by 2, 3, 4, 5, 6
  
  # 서비스별 총합 용량
  all_services:
    name: '서비스별 총합 용량'
    query: |
      SELECT
      --     toDate(now()),
      replace(replace(replace(t.database, '_logs', ''), '_metrics', ''), '_traces', '') as service,
      --    if(database like '%logs', 'logs',if(database like '%metrics','metrics','traces')) as database,
      --    t.table, p.partition,disk_name,
      ceil(sum(p.size) / 1024 / 1024, 0)                                                as MB,
      --    ceil(sum(p.default) / 1024 / 1024,    0) as default_MB,
      --    ceil(sum(p.s3) / 1024 / 1024,    0) as s3_MB,
      --    default_MB + s3_MB as total_MB,
      sum(rows)                                                                         as rows
      from (select distinct database, table
            from cluster('all-sharded', system.tables)
            where 1 = 1
              and engine like '%MergeTree'
              and database not in ('information_schema', 'INFORMATION_SCHEMA', 'system', 'default', 'test')) t
              left join (select database,
                                table,
                                partition,
                                disk_name,
      --                if(disk_name = 'default', bytes_on_disk, 0) as default,
      --                if(disk_name = 's3_disk', bytes_on_disk, 0) as s3,
                                bytes_on_disk as size,
                                rows
                          from
                              cluster('all-sharded', system.parts)
                          where database not in ('information_schema', 'INFORMATION_SCHEMA', 'system', 'default', 'test')
                            and active) p
                        on t.database = p.database and t.table = p.table
      where 1 = 1
      --and (partition > cast(toDate(now() - interval 5 day) as text) or partition in ('', 'tuple()'))
        and disk_name <> 's3_disk'
      --and service = 'knox_matrix_prod'
      group by 1
      order by 1
  
  # 모든 데이터베이스와 테이블 목록
  all_tables:
    name: '전체 테이블'
    query: |
      SELECT 
        database,
        name as table_name,
        engine,
        formatReadableSize(total_bytes) as size,
        total_rows
      FROM system.tables 
      WHERE database NOT IN ('system', 'information_schema', 'INFORMATION_SCHEMA')
      ORDER BY database, name
     
  # 가장 큰 테이블들 (데이터가 많은 테이블)
  largest_tables:
    name: '큰 테이블들'
    query: |
      SELECT 
        database,
        name as table_name,
        formatReadableSize(total_bytes) as size,
        total_rows,
        engine
      FROM system.tables 
      WHERE total_bytes > 1000000  -- 1MB 이상
      ORDER BY total_bytes DESC
      LIMIT 50
